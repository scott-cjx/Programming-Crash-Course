{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udf1f NTU CCDS Coding Workshop - BIM Summer Programme 2024! \ud83c\udf1f","text":"<p>Welcome to the NTU CCDS Coding Workshop! This repository contains all the essentials for diving into programming. Below, you'll find resources and guides to help you get started.</p> <p>\ud83c\udf10 View this on live pages here</p>"},{"location":"#what-to-expect","title":"\ud83d\udcda What to Expect","text":"<ul> <li>GitHub: Version control basics and how to manage your code with GitHub.</li> <li> <p>\ud83d\udee0\ufe0f GitHub</p> </li> <li> <p>VSCode: Setting up your development environment using Visual Studio Code.</p> </li> <li> <p>\ud83d\udda5\ufe0f VSCode</p> </li> <li> <p>Python: The fundamentals of programming, starting with Python.</p> </li> <li>\ud83d\udc0d Python</li> </ul>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>GPLv3</p> <p>Happy Coding! \ud83d\udcbb\ud83d\ude80</p>"},{"location":"help/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"help/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"help/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"basics/","title":"What is Programming?","text":"<p>Programming is the process of writing code to solve problems.  Below is a simple flowchart to show how code may be converted into program.</p> <pre><code>graph LR\n  A[Start]\n  B[\"Type a code in\"]\n  C[\"Converted to binary (0/1)\"]\n  D[\"Syntax Error\"]\n  E[\"CPU processes them, giving output\"]\n  A --&gt; B\n  B -- Valid Code ---&gt; C --&gt; E\n  B -- Invalid Code --&gt; D</code></pre>"},{"location":"basics/#why-do-we-program","title":"Why do we program?","text":"<p>Programming gives convenience to our everyday lives.  With code, transportation, banking and food delivery applications are made possible.</p>"},{"location":"basics/#logic","title":"Logic","text":"<p>Programming is relatively easy, once you pick up the basics.</p> <p>Programming - Syntax - Semantics</p> <p>The main components to any programming language:</p> <ul> <li>Variables<ul> <li>Data Types</li> <li>Data Structures (Advanced Topic)</li> </ul> </li> <li>Control Flow<ul> <li>Conditional statements<ul> <li>If-Else</li> </ul> </li> <li>Loops<ul> <li>For</li> <li>While</li> <li>Do-While (Optional)</li> </ul> </li> </ul> </li> </ul>"},{"location":"basics/arithmetic/","title":"Arithmetics","text":"Operator Name Example + Addition x+y - Subtraction x-y * Multiplication x*y / Division x/y == Equals x==y != Not Equal x!=y &gt; Greater Than x&gt;y &lt; Less Than x&lt;y &gt;= Greater Than or Equal to x&gt;=y &lt;= Less Than or Equal to x&lt;=y"},{"location":"basics/control-flow/","title":"Control Flow","text":"<p>Control Flow is used to determine what code gets executed.</p>"},{"location":"basics/control-flow/#conditions","title":"Conditions","text":"<p>Conditions are statements that result in a boolean.</p> <pre><code>ans = \"the sky red?\"\n# ans = No\n</code></pre>"},{"location":"basics/control-flow/#conditional-statements","title":"Conditional Statements","text":""},{"location":"basics/control-flow/#if-else-statements","title":"If-Else Statements","text":"<p>If-else are statement in which if the condition is true, the if block code is executed. For values where condition is false, the else block is executed.</p> <pre><code>graph LR\n  A[Start]\n  B{\"Am I Tired\"}\n  C[\"Sleep\"]\n  D[\"Code More\"]\n  E[\"Do Something\"]\n\n  A --&gt; B\n  B -- Yes --&gt; C --&gt; E\n  B -- No --&gt; D ---&gt; E</code></pre> <p><pre><code>ans = 2\nif ans &gt;= 0:\n  return \"Yes\"\nelse:\n  return \"No\"\n# Output: Yes\n</code></pre> In this example, 2&gt;0, hence return Yes.</p>"},{"location":"basics/control-flow/#loops","title":"Loops","text":""},{"location":"basics/control-flow/#for-loop","title":"For Loop","text":"<p>For loop goes through a sequence of element one by one, executing the block of code within itself</p> <pre><code>graph LR\n  A[Start]\n  B{\"For Condition\"}\n  C[\"Execute&lt;br&gt;code below\"]\n  D[\"Exit the loop\"]\n  E[\"Move on\"]\n\n  A --&gt; B\n  B -- In range ---&gt; C --&gt; B\n  B -- Out of range --&gt; D --&gt; E</code></pre> <pre><code>friends = [\"alice\",\"bella\",\"charlie\"]\nfor i in friends:\n  print (i)\n''' Output: alice\n            bella\n            charlie\n'''\n</code></pre>"},{"location":"basics/control-flow/#while-loop","title":"While Loop","text":"<p>While loop executes the block of code within itself as long as the condition holds true</p> <pre><code>graph LR\n  A[Start]\n  B{\"While Sunny\"}\n  C[\"Go out for a run\"]\n  D[\"Exit while loop\"]\n  E[\"Move on to other code segments\"]\n\n  A --&gt; B\n  B -- Sunny ---&gt; C --&gt; B\n  B -- Rainy(not sunny) --&gt; D --&gt; E</code></pre> <p><pre><code>number = 5\nwhile number &gt; 0: \n  print (number)\n  number -= 1  #reduces number by one each time, i.e. 5-1=4, 4-1=3, etc\n''' Output: 5\n            4\n            3\n            2\n            1\n'''\n</code></pre> In this case, as long as number&gt;0, the number gets printed. At the point where number =0, while loop terminates.  Hence, the final number printed is 1.</p>"},{"location":"basics/control-flow/#further-reading-do-while-loop-nested-loops","title":"Further Reading: Do-while loop, Nested loops.","text":"<ul> <li>Do-while loop</li> <li>Nested loop</li> </ul>"},{"location":"basics/variables/","title":"Variables","text":"<p>Variables are like <code>containers</code> that hold a <code>value</code>.</p> <p>The type of <code>value</code> is the <code>DataType</code></p>"},{"location":"basics/variables/#datatype","title":"DataType","text":"<ul> <li>Number</li> <li>Character (ie. 'a', 'b', 'c', etc...)</li> <li>Array (Special)</li> <li>Boolean</li> </ul>"},{"location":"basics/variables/#number","title":"Number","text":"<p>As simple as it sounds, a number can have many different datatypes.</p> <ul> <li><code>float</code> or <code>double</code> are decimal-point numbers, difference is in its accuracy (@advanced: how does a computer store numbers &amp; therefore whats the difference between the 2?)</li> <li><code>int</code> is used to store a whole number (@advanced: does it always store in base 10?)</li> </ul>"},{"location":"basics/variables/#characters","title":"Characters","text":"<p>Characters refer to a single, ONE letter. </p> <p>Of course 1 letter is pretty useless unless it can be used as a String. </p> <p>A String is an array of characters, allowing multiple characters to be stored in 1 vairable, that is a String.</p>"},{"location":"basics/variables/#array","title":"Array","text":"<p>An array is a special data type, it is able to store multiple variables in 1 variable. (re-read that to take it in).</p>"},{"location":"basics/variables/#boolean","title":"Boolean","text":"<p>A boolean is a variable that only have 2 states: - 1 or 0 - True or False.  - Yes or No</p> <p>It is usually a DataType of its own in MOST high level programming langauges.</p>"},{"location":"basics/variables/#advanced","title":"Advanced","text":"<p>(@advanced) Primitive vs Derived DataTypes: Derived DataTypes are when a programmer defines their own Datatype using the primitive ones (@google)</p>"},{"location":"github/","title":"Github","text":"<p>Github is one the most essential tools a programmer can have.</p> <p>It is basically a \"Google Drive\" but organised as if a file storage. </p> <p>Github has many uses but the most common use is to version and store code and documentation.</p>"},{"location":"github/#create-a-github-account","title":"Create a Github account.","text":"<p>Use this link to sign up.</p>"},{"location":"github/#download-github-locally","title":"Download Github locally","text":"<p>Use this link to download Github Desktop, a Graphical User Interface version of Github. (for beginners)</p>"},{"location":"github/#create-a-repository","title":"Create a repository","text":"<p>There are many ways to create a repository and link it to github, but this is one of the easier ways to do so.</p> <ol> <li>Sign In to your account in Github</li> <li>Goto My Repositories</li> <li>Click on <code>new</code>, you should then be on this page </li> <li>Fill out all information of your new repository (name, visibility, template (optional), gitignore, etc.)</li> <li>Goto repository page</li> <li>Click on (Green) <code>Code</code>,  </li> <li>Select <code>Open with Github Desktop</code></li> <li></li> </ol> <p>todo...</p>"},{"location":"python/","title":"\ud83d\udc0d Python","text":"<p>Python is a popular programming language created by Guido van Rossum and released in 1991. It's known for its simplicity and versatility.</p>"},{"location":"python/#general-purpose-language","title":"\ud83c\udf1f General Purpose Language","text":"<p>Python is used for a wide range of applications, including:</p> <ul> <li>\ud83e\udd16 Machine Learning and Artificial Intelligence</li> <li>\ud83d\udcca Data Science (Data manipulation)</li> <li>\ud83d\udda5\ufe0f Scripting</li> <li>\ud83d\udd27 Automation</li> <li>\ud83e\udd16 Robotics</li> <li>\ud83c\udf10 Websites</li> <li>...and much more!</li> </ul>"},{"location":"python/#why-python","title":"\ud83d\udca1 Why Python?","text":"<ul> <li>Cross-Platform: Works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc.).</li> <li>Simple Syntax: Has a syntax similar to the English language, making it easy to learn.</li> <li>Concise Code: Allows developers to write programs with fewer lines of code compared to some other programming languages.</li> <li>Interpreted Language: Runs on an interpreter system, meaning code can be executed as soon as it is written. This makes prototyping very quick.</li> </ul>"},{"location":"python/#beginner-friendly","title":"\ud83d\ude80 Beginner Friendly!!","text":"<p>Python's simplicity and readability make it an excellent choice for beginners. Dive in and start coding today!</p>"},{"location":"python/#python-installation","title":"\ud83d\udc0d Python Installation","text":"<p>For most modern computers, a version of Python should already be installed.</p>"},{"location":"python/#checking-if-python-is-already-installed","title":"\u2705 Checking if Python is Already Installed","text":"WindowsMacOS <pre><code># 1. Open terminal\npython --version\n</code></pre> <pre><code># 1. Open terminal\npython -V # If the following results in an error, try\n# 2. Type in the following\npython3 -V\n</code></pre> <p>If Python is not installed, visit this page to download it.</p> <p>Once the download and installation are complete, please try checking to see if Python is installed.</p>"},{"location":"python/#introduction-to-google-colaboratory","title":"\ud83d\udcdd Introduction to Google Colaboratory","text":"<p>Google Colab is a document that allows you to write, run, and share Python code within your browser. It is built around Project Jupyter code and hosts Jupyter notebooks without requiring any local software installation. Google Colab only supports Python.</p>"},{"location":"python/#create-a-document","title":"\u270f\ufe0f Create a Document","text":"<p>Access Google Colab here. Once loaded, select \"File\" at the top left corner, then select \"New Notebook\". If a box pops up upon loading the site, select \"New Notebook\" to create a new document.</p>"},{"location":"python/#basic-functions","title":"\u2699\ufe0f Basic Functions","text":"<p>After creating a new notebook, you will see an empty code cell where you can enter Python code and execute it at any time. Execution of code can be done by:</p> <ul> <li>Clicking on the play button on the left side of the cell, or</li> <li>Pressing <code>Command</code>/<code>Ctrl + Enter</code> on your keyboard</li> </ul> <p>To generate a new code cell, hover over the top/bottom of your current code cell and click on the \"+ Code\" button. The \"+ Text\" button will generate a text cell.</p> <ul> <li> <p>Text cells are formatted using a simple markup language called Markdown.</p> <p><code>Shift + Enter</code> will run your current cell and generate a new code cell.</p> </li> </ul> <p>When a cell is selected, a toolbar will appear at the top right corner of the cell. It contains functions specific to the cell, including moving the current cell up or down, adding comments, deleting the cell, etc.</p>"},{"location":"python/#sharing-your-colab-notebook","title":"\ud83d\udd04 Sharing Your Colab Notebook","text":"<p>Colab notebooks are stored in Google Drive, and they can be shared just as you would with Google Docs or Sheets. Simply click the Share button at the top right of any Colab notebook.</p> <ul> <li>The full contents of your notebook will be shared. You can omit code cell output from being saved or shared by using <code>Edit &gt; Notebook Settings &gt; Omit code cell output when saving this notebook</code>.</li> </ul>"},{"location":"python/#opening-a-closed-notebook","title":"\ud83d\udcc2 Opening a Closed Notebook","text":"<p>In the Colab page, clicking on the logo at the top left of the notebook will show all the notebooks in Drive.</p> <p>You can also search for notebooks you have used recently using <code>File &gt; Open Notebook</code>.</p> <p>Now open up Python Tutorial, we will be using this notebook for demonstration and exercises in our workshop.</p>"},{"location":"vscode/","title":"VSCode","text":"<p>VScode is one of the most used code editor. </p> <p>It is basically a \"Microsoft Word\" for code but gives a programmer essential functions such as <code>code highlighting</code> and <code>linting</code>.</p> <p>VSCode has a pletora of extentions for almost all the purposes a programmer will ever need.</p>"},{"location":"vscode/#download-vscode","title":"Download VSCode","text":"<p>Use this link to download VSCode.</p>"},{"location":"vscode/#getting-started","title":"Getting Started","text":"<p>After creating a github repository and cloning it into your local system from github demo, we can open this project folder in VSCode.</p> <ol> <li>Open VSCode on your computer</li> <li>File -&gt; Open</li> <li>Open the Folder of the project directory</li> </ol> <p>todo...</p>"}]}